{"version":3,"sources":["pages/home.jsx","pages/download.jsx","App.js","reportWebVitals.js","index.js"],"names":["Home","React","useState","file","setFile","url","setUrl","send","a","config","headers","fd","FormData","append","axios","post","response","console","log","data","qr","filename","type","onChange","e","target","files","onClick","value","Download","params","useParams","searching","found","fileCheck","setFileCheck","fileId","checkQR","get","downloadFile","responseType","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","originalname","body","appendChild","click","useEffect","JSON","stringify","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"2OA2BeA,MAvBf,WACE,MAAwBC,IAAMC,SAAS,IAAvC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAsBH,IAAMC,SAAS,IAArC,mBAAOG,EAAP,KAAYC,EAAZ,KACMC,EAAI,uCAAG,kCAAAC,EAAA,6DACLC,EAAS,CAAEC,QAAS,CAAE,eAAgB,yBACxCC,EAAK,IAAIC,UACVC,OAAO,OAAQV,GAHP,SAIYW,IAAMC,KAAK,YAAaJ,EAAIF,GAJxC,OAILO,EAJK,OAKXC,QAAQC,IAAR,OAAYF,QAAZ,IAAYA,OAAZ,EAAYA,EAAUG,MACtBb,EAAO,2BAAkBU,EAASG,YAA3B,aAAkB,EAAeC,GAAGC,WANhC,2CAAH,qDASV,OACE,8BACE,gCACE,uBAAOC,KAAK,OAAOC,SAAU,SAACC,GAAD,OAAOpB,EAAQoB,EAAEC,OAAOC,MAAM,OAC3D,wBAAQC,QAASpB,EAAjB,kBACA,cAAC,IAAD,CAAQqB,MAAOvB,U,OCoCRwB,EArDE,WACf,IAAMC,EAASC,cACf,EAAkC9B,IAAMC,SAAS,CAC/C8B,WAAW,EACXC,OAAO,EACPb,IAAI,IAHN,mBAAOc,EAAP,KAAkBC,EAAlB,KAKAlB,QAAQC,IAAIY,EAAOM,QACnB,IAAMC,EAAO,uCAAG,8BAAA7B,EAAA,sEACGM,IAAMwB,IAAI,aAAeR,EAAOM,QADnC,OACRhB,EADQ,QAEd,UAAIA,EAAGD,YAAP,aAAI,EAAShB,MACXgC,EAAa,CACXH,WAAW,EACXC,OAAO,EACPb,GAAIA,EAAGD,KAAKhB,OAGdgC,EAAa,CACXH,WAAW,EACXC,OAAO,EACPb,IAAI,IAZM,2CAAH,qDAiBPmB,EAAY,uCAAG,gCAAA/B,EAAA,sEACIM,IAAMwB,IAAI,gBAAkBR,EAAOM,OAAQ,CAChEI,aAAc,SAFG,OACbxB,EADa,OAIbX,EAAMoC,OAAOC,IAAIC,gBAAgB,IAAIC,KAAK,CAAC5B,EAASG,SACpD0B,EAAOC,SAASC,cAAc,MAC/BC,KAAO3C,EACZwC,EAAKI,aAAa,WAAYf,EAAUd,GAAG8B,cAC3CJ,SAASK,KAAKC,YAAYP,GAC1BA,EAAKQ,QATc,2CAAH,qDAoBlB,OARApD,IAAMqD,WAAU,WACdjB,MACC,IAEHpC,IAAMqD,WAAU,WACdpB,EAAUd,IAAMmB,MACf,CAACL,EAAUd,KAGZ,gCACE,kDACA,4BAAImC,KAAKC,UAAUtB,EAAUd,U,QC/CpB,SAASqC,IACtB,OACE,cAAC,IAAD,UACE,8BACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAArB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,KAAK,oBAAZ,SACE,cAAC,EAAD,aCdZ,IAYeE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACd,EAAD,MAEFX,SAAS0B,eAAe,SAM1BZ,M","file":"static/js/main.9020cb46.chunk.js","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport QRCode from \"qrcode.react\";\r\n\r\nfunction Home() {\r\n  const [file, setFile] = React.useState(\"\");\r\n  const [url, setUrl] = React.useState(\"\");\r\n  const send = async () => {\r\n    const config = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n    let fd = new FormData();\r\n    fd.append(\"file\", file);\r\n    const response = await axios.post(\"/api/send\", fd, config);\r\n    console.log(response?.data);\r\n    setUrl(\"/api/download\" + response.data?.qr.filename);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <input type=\"file\" onChange={(e) => setFile(e.target.files[0])} />\r\n        <button onClick={send}>send</button>\r\n        <QRCode value={url} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst Download = () => {\r\n  const params = useParams();\r\n  const [fileCheck, setFileCheck] = React.useState({\r\n    searching: true,\r\n    found: false,\r\n    qr: false,\r\n  });\r\n  console.log(params.fileId);\r\n  const checkQR = async () => {\r\n    const qr = await axios.get(\"/api/check\" + params.fileId);\r\n    if (qr.data?.file) {\r\n      setFileCheck({\r\n        searching: false,\r\n        found: true,\r\n        qr: qr.data.file,\r\n      });\r\n    } else {\r\n      setFileCheck({\r\n        searching: false,\r\n        found: false,\r\n        qr: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  const downloadFile = async () => {\r\n    const response = await axios.get(\"/api/download\" + params.fileId, {\r\n      responseType: \"blob\",\r\n    });\r\n    const url = window.URL.createObjectURL(new Blob([response.data]));\r\n    const link = document.createElement(\"a\");\r\n    link.href = url;\r\n    link.setAttribute(\"download\", fileCheck.qr.originalname); //or any other extension\r\n    document.body.appendChild(link);\r\n    link.click();\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    checkQR();\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    fileCheck.qr && downloadFile();\r\n  }, [fileCheck.qr]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>downloading file</h1>\r\n      <p>{JSON.stringify(fileCheck.qr)}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Download;\r\n","import React from \"react\";\nimport Home from \"./pages/home\";\nimport Download from \"./pages/download\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nexport default function App() {\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route path=\"/\" exact>\n            <Home />\n          </Route>\n          <Route path=\"/download/:fileId\">\n            <Download />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}